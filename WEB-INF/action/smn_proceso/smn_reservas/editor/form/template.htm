<!doctype html>
<html>

<head>

		<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
		<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/jquery"></script>
	<script type="text/javascript" src="${def:context}/action/script">
	</script>

</head>

<body>

<!--banner-->
<div class="bannerDialog" id="encabezado_tabla">
	${lbl:b_booking}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
		<tr>
			<td>${lbl:b_event}*</td>
			<td>
				<select name="smn_evento_id" id="smn_evento_id" onchange="chgCombo(smn_evento_id.options[smn_evento_id.selectedIndex].text,'smn_evento_id_name');">
					<option value="">[Cualquiera]</option>
					<smn_evento_id_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_evento_id_rows>
				</select> 
				<input id="smn_evento_id_name" name="smn_evento_id_name" type="hidden">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_afiliate}*</td>
			<td>
				<select name="smn_afiliado_id" id="smn_afiliado_id" onchange="chgCombo3(smn_afiliado_id.options[smn_afiliado_id.selectedIndex].text,'smn_afiliado_id_name');">
					<option value="">[Cualquiera]</option>
					<smn_afiliado_id_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_afiliado_id_rows>
				</select> 
				<input id="smn_afiliado_id_name" name="smn_afiliado_id_name" type="hidden">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_related}</td>
			<td id="ing">
				<!-- <smn_ingredientes_id_rows>
				<input name="smn_ingredientes_id" id="smn_ingredientes_id" type="checkbox" value="${fld:smn_ingredientes_id}" style="width:10px"> ${fld:item}<br>
				</smn_ingredientes_id_rows> -->
				</td>
		</tr>
		
		<!-- <tr>
			<td>${lbl:b_related}*</td>
			<td>
				<select name="smn_relacionado_id" id="smn_relacionado_id" onchange="chgCombo(smn_relacionado_id.options[smn_relacionado_id.selectedIndex].text,'smn_relacionado_id_name');">
					<option value="">[Cualquiera]</option>
					<smn_relacionado_id_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_relacionado_id_rows>
				</select> 
				<input id="smn_relacionado_id_name" name="smn_relacionado_id_name" type="hidden">
			</td>
		</tr> -->
		<tr>
			<td>${lbl:b_quantity}*</td>
			<td>
				<input id="res_cantidad" name="res_cantidad" type="text" maxlength="10" class="numeric" onchange="validarcantidad();">
			</td>
		<!-- 	<td>
				<img src="${def:context}/images/icongrid/Generar.png" align="left" class="button" onclick="calcularcantidad();" title="Calcular Cantidad" >
			</td>
			<td>
				&nbsp;&nbsp;
			</td>	 -->
		</tr>
		<tr style="display: none">
			<td>${lbl:b_estatus}*</td>
			<td>
				<select name="res_estatus" id="res_estatus">
				<option value="AC">${lbl:b_active}</option>
				<option value="CA">${lbl:b_cancelled}</option>

				</select> 
			</td>
		</tr>


	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input id="limpiar" type="button" value="${lbl:b_clean_button}" onclick="addNew()" class="button">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();

		document.getElementById("grabar").disabled=true;

		if (id!="")
			edit(id);
	} 
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=true;
		clearForm("form1");
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		if (document.form1.id.value=="")
			return insert();
		else
			return update();
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id , 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}


		   //Author     : SIMONE
    //Description: Set first element as selected value
    //Return     : None
    function setElementFirstIndex(id)
    {
        var combo = document.getElementById(id);
        combo.selectedIndex = 0;
    }

    //Author     : SIMONE
    //Description: Insert new value into combo box
    //Return     : None
    function insertComboBox(code, combo, description) {
        var valueText = code;
        if (description != null)
        {
            valueText = valueText + ' - ' + description;
        }
        //alert("Insert Combo: "+valueText);
       combo.options[combo.options.length] = new Option(valueText);
    }
    
    //Author     : SIMONE
    //Description: Add new value to combo box
    //Return     : None
    function addValueToCombo(code, description, field)
    {
        var combo = document.getElementById(field);        
        insertComboBox(code, combo, description);
    }
    
    //Author     : SIMONE
    //Description: Set selected index into combo box
    //Return     : None
    function setSelectedIndex(code, combo, description)
    {
        for (var i = 0; i < combo.options.length; i++)
        {
            var valueText = code;
            if (description != null)
            {
                valueText = valueText + ' - ' + description;
            }
            if (combo.options[i].text == valueText)
            {
                combo.options[i].selected = true;
                return;
            }
        }
    }
    
    //Author     : SIMONE
    //Description: Get text valueof selected index
    //Return     : Text associated to index
    function getSelectedIndex(combo)
    {
        for (var i = 0; i < combo.options.length; i++)
        {
            if (combo.options[i].selected == true)
            {
                return combo.options[i].text;
            }
        }
    }
    function getIDSelectedIndex(combo)
    {
        for (var i = 0; i < combo.options.length; i++)
        {
            if (combo.options[i].selected == true)
            {
                return combo.options[i].value;
            }
        }
    }
    

    //Author     : SIMONE
    //Description: Set value to combo box
    //Parameters : code - it is code associated into each database table
    //             descripcion - it is description associated into each database table
    //             field - name combo field
    //             id - identifier retrieved after transaction
    //             linked - flag indicates 'true' when combos are linked and 'false' otherwise
    //Return     : None
    function setValueComboBox(code, description, field, linked)
    {
        //add value text to combo
        addValueToCombo(code,description,field);

        //get select object
        var combo = document.getElementById(field);
        
        //set element selected to field referenced
        setSelectedIndex(code,combo, description);
        
        //set text value to combo field
        var valueText = getSelectedIndex(combo);        
        
        //get hidden field in order to set any value
        var combo = document.getElementById(field+'_name');
        
        //alert("Text: "+valueText+" - bdID: "+bdID);
        
        combo.text  = valueText;
        combo.value = bdID;
        
        //enable linked fields
        if (linked)
        {
           
        }
    }

    //Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setCheckBox(id)
	{
		setCheckboxValue('smn_relacionado_id','${fld:smn_relacionado_id}','form1');
	}
  

	//Este codigo fue creado por SIMONE y ajustado en este crud por Kelvin Marcano
	var geo_id2 = null;
	function chgCombo3(text,id)
	{				
		var combo = document.getElementById('smn_afiliado_id');
		var valueCombo = getIDSelectedIndex(combo);
		geo_id2 = valueCombo.split("-").pop().trim();
		
		if (id!=null && id!="") 
		{	
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getrelacionado?id=" + geo_id2, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setCheckBox('smn_relacionado_id'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null); 				
		}
	}


	function validarcantidad() {
		var afiliacion_id = document.getElementById('smn_afiliado_id').value;
		var evento_id = document.getElementById('smn_evento_id').value;

		var uri="${def:actionroot}/getvalidarCantidad?id_afiliado="+afiliacion_id+"&id_evento="+evento_id;
		//alert(uri);
		ajaxCall(	
			httpMethod="GET", 
			uri, 
			divResponse=null, 
			divProgress="status", 
			formName="form1", 
			afterResponseFn=null, //function 'setElementFirstIndex' select first element of combo list
			onErrorFn=null); 			

	}

	
</script>	
</body>
</html>
