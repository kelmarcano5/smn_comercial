<!doctype html>
<html>

<head>

<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script">
	</script>

</head>

<body>

<!--banner-->
<div class="bannerDialog" id="encabezado_tabla">
	${lbl:b_offer_detail}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
			<tr>
		<td>${lbl:b_offer}*</td>
		<td>
			<select name="smn_oferta_id" id="smn_oferta_id" onchange="chgCombo(smn_oferta_id.options[smn_oferta_id.selectedIndex].text,'smn_oferta_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_oferta_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_oferta_id_rows>
			</select> 
			<input id="smn_oferta_id_name" name="smn_oferta_id_name" type="hidden">
		</td>
	</tr>
		<tr>
			<td>${lbl:b_nature}*</td>
			<td>
				<select name="ofd_naturaleza" id="ofd_naturaleza" onchange="cambiartipo();">
				<option value="">[Cualquiera]</option>
				<option value="IT">${lbl:b_item}</option>
				<option value="SE">${lbl:b_services}</option>
				<option value="AF">${lbl:b_actfijo}</option>

				</select> 
			</td>
		</tr>
		<tr id="serv" style="display:none">
			<td>${lbl:b_services}</td>
			<td>
				<select name="smn_servicios_rf" id="smn_servicios_rf" onchange="chgCombo(smn_servicios_rf.options[smn_servicios_rf.selectedIndex].text,'smn_servicios_rf_name');">
					<option value="">[Cualquiera]</option>
					<smn_servicios_rf_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_servicios_rf_rows>
				</select> 
				<input id="smn_servicios_rf_name" name="smn_servicios_rf_name" type="hidden">
			</td>
		</tr>
		<tr id="ite" style="display:none">
			<td>${lbl:b_item}</td>
			<td>
				<select name="smn_item_rf" id="smn_item_rf" onchange="chgCombo(smn_item_rf.options[smn_item_rf.selectedIndex].text,'smn_item_rf_name');">
					<option value="">[Cualquiera]</option>
					<smn_item_rf_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_item_rf_rows>
				</select> 
				<input id="smn_item_rf_name" name="smn_item_rf_name" type="hidden">
			</td>
		</tr>
		<tr id="act" style="display:none">
			<td>${lbl:b_actfijo}</td>
			<td>
				<select name="smn_activo_fijo_rf" id="smn_activo_fijo_rf" onchange="chgCombo(smn_activo_fijo_rf.options[smn_activo_fijo_rf.selectedIndex].text,'smn_activo_fijo_rf_name');">
					<option value="">[Cualquiera]</option>
					<smn_activo_fijo_rf_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_activo_fijo_rf_rows>
				</select> 
				<input id="smn_activo_fijo_rf_name" name="smn_activo_fijo_rf_name" type="hidden">
			</td>
		</tr>
	<tr>
		<td>${lbl:b_coins}</td>
		<td>
			<select name="ofd_moneda_rf" id="ofd_moneda_rf" onchange="chgCombo(ofd_moneda_rf.options[ofd_moneda_rf.selectedIndex].text,'ofd_moneda_rf_name'); mostrar();">
				<option value="">[Cualquiera]</option>
				<ofd_moneda_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</ofd_moneda_rf_rows>
			</select> 
			<input id="ofd_moneda_rf_name" name="ofd_moneda_rf_name" type="hidden">
		</td>
	</tr>
		<tr>
			<td>${lbl:b_quantity}*</td>
			<td>
				<input id="ofd_cantidad" name="ofd_cantidad" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr id="prec_ml">
			<td>${lbl:b_price}*</td>
			<td>
				<input id="ofd_precio" name="ofd_precio" type="text" maxlength="10" class="numeric" onchange="calculartotal();">
			</td>
		</tr>
		<tr id="mont_ml">
			<td>${lbl:b_amount}*</td>
			<td>
				<input id="ofd_monto_ml" name="ofd_monto_ml" type="text" maxlength="10" class="numeric" disabled="true">
			</td>
		</tr>
	
	<tr>
		<td>${lbl:b_exchange_rate}</td>
		<td>
			<select name="smn_tasa_rf" id="smn_tasa_rf" onchange="chgCombo(smn_tasa_rf.options[smn_tasa_rf.selectedIndex].text,'smn_tasa_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_tasa_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_tasa_rf_rows>
			</select> 
			<input id="smn_tasa_rf_name" name="smn_tasa_rf_name" type="hidden">
		</td>
	</tr>
		<tr style="display: none" id="prec_ma">
			<td>${lbl:b_price_coins_alter}</td>
			<td>
				<input id="ofd_precio_moneda_alterna" name="ofd_precio_moneda_alterna" type="text" maxlength="10" class="numeric" onchange="calculartotal();">
			</td>
		</tr>
		<tr style="display: none" id="mont_ma">
			<td>${lbl:b_amount_coins_alter}</td>
			<td>
				<input id="ofd_monto_moneda_alterna" name="ofd_monto_moneda_alterna" type="text" maxlength="10" class="numeric" disabled="true">
			</td>
		</tr>


	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input id="limpiar" type="button" value="${lbl:b_clean_button}" onclick="addNew()" class="button">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();

			document.getElementById("smn_oferta_id").disabled=true;
			document.getElementById("smn_oferta_id").value = '${fld:id2}';

		if (id!="")
			edit(id);
	} 

	function calculartotal() {
		var cant = document.getElementById('ofd_cantidad').value;
		var pre = document.getElementById('ofd_precio').value;
		var pre_ma = document.getElementById('ofd_precio_moneda_alterna').value;
		var to = 0;
		var mon = document.getElementById('ofd_moneda_rf').value;


		if (mon == 360 || mon == "") {
			to = cant * pre;
			document.getElementById('ofd_monto_ml').value = to;

		} else {
			to = cant * pre_ma;
			document.getElementById('ofd_monto_moneda_alterna').value = to;

		}
		

	}

	function mostrar() {
		var mon = document.getElementById('ofd_moneda_rf').value;

//alert(mon);
		if(mon == 360 || mon == ""){
			document.getElementById('prec_ma').style.display = "none";
			document.getElementById('mont_ma').style.display = "none";
			document.getElementById('prec_ml').style.display = "";
			document.getElementById('mont_ml').style.display = "";
		}else{
			document.getElementById('prec_ma').style.display = "";
			document.getElementById('mont_ma').style.display = "";
			document.getElementById('prec_ml').style.display = "none";
			document.getElementById('mont_ml').style.display = "none";
			
		}

	}

	function cambiartipo() {
		var tipo = document.getElementById("ofd_naturaleza").value;


		if(tipo=="IT"){
			document.getElementById("ite").style.display="";
			document.getElementById("act").style.display="none";
			document.getElementById("serv").style.display="none";	
		}else if(tipo=="SE"){
			document.getElementById("serv").style.display="";
			document.getElementById("ite").style.display="none";
				document.getElementById("act").style.display="none";
		}else if(tipo=="AF"){
			document.getElementById("act").style.display="";
			document.getElementById("serv").style.display="none";
			document.getElementById("ite").style.display="none";
		}else if(tipo == ""){
				document.getElementById("act").style.display="none";
			document.getElementById("serv").style.display="none";
			document.getElementById("ite").style.display="none";
		}
	}
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=false;
		clearForm("form1");
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		if (document.form1.id.value=="")
			return insert();
		else
			return update();
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id , 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}

		//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndexValue(value, combo) 
			{
				for (var i = 0; i < combo.options.length; i++) 
				{					
					if (combo.options[i].text == value) 
					{
						combo.options[i].selected = true;
						return;
					}
				} 
			}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText) 
	        {
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}
	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	

	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add value text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		
		//alert("Text: "+valueText+" - bdID: "+bdID);
		
		combo.text  = valueText;
		combo.value = bdID;
		
		//enable linked fields
		if (linked)
		{
			if (field == 'smn_clase_auxiliar_rf')
			{
				document.form1.smn_clase_auxiliar_rf.disabled = false;
			}
			if (field == 'smn_auxiliar_rf')
			{
				document.form1.smn_auxiliar_rf.disabled = false;
			}
		}
	}

	
</script>	
</body>
</html>
