<!doctype html>
<html>

<head>

		<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
		<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script">
	</script>

</head>

<body>

<!--banner-->
<div class="bannerDialog" id="encabezado_tabla">
	${lbl:b_plan_venta}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
			<tr>
		<td>${lbl:b_entities}*</td>
		<td>
			<select name="smn_entidades_rf" id="smn_entidades_rf" onchange="chgCombo3(smn_entidades_rf.options[smn_entidades_rf.selectedIndex].text,'smn_entidades_rf_name');chgCombo12(smn_entidades_rf.options[smn_entidades_rf.selectedIndex].text,'smn_entidades_rf_name');chgCombo13(smn_entidades_rf.options[smn_entidades_rf.selectedIndex].text,'smn_entidades_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_entidades_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_entidades_rf_rows>
			</select> 
			<input id="smn_entidades_rf_name" name="smn_entidades_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_subsidiary}*</td>
		<td>
			<select name="smn_sucursal_rf" id="smn_sucursal_rf" onchange="chgCombo(smn_sucursal_rf.options[smn_sucursal_rf.selectedIndex].text,'smn_sucursal_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_sucursal_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_sucursal_rf_rows>
			</select> 
			<input id="smn_sucursal_rf_name" name="smn_sucursal_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_service_areas}</td>
		<td>
			<select name="smn_area_servicio_rf" id="smn_area_servicio_rf" onchange="chgCombo2(smn_area_servicio_rf.options[smn_area_servicio_rf.selectedIndex].text,'smn_area_servicio_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_area_servicio_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_area_servicio_rf_rows>
			</select> 
			<input id="smn_area_servicio_rf_name" name="smn_area_servicio_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_service_units}</td>
		<td>
			<select name="smn_unidad_servicio_rf" id="smn_unidad_servicio_rf" onchange="chgCombo(smn_unidad_servicio_rf.options[smn_unidad_servicio_rf.selectedIndex].text,'smn_unidad_servicio_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_unidad_servicio_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_unidad_servicio_rf_rows>
			</select> 
			<input id="smn_unidad_servicio_rf_name" name="smn_unidad_servicio_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_store_code}</td>
		<td>
			<select name="smn_almacen_rf" id="smn_almacen_rf" onchange="chgCombo(smn_almacen_rf.options[smn_almacen_rf.selectedIndex].text,'smn_almacen_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_almacen_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_almacen_rf_rows>
			</select> 
			<input id="smn_almacen_rf_name" name="smn_almacen_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_document}*</td>
		<td>
			<select name="smn_documento_id" id="smn_documento_id" onchange="chgCombo(smn_documento_id.options[smn_documento_id.selectedIndex].text,'smn_documento_id_name');">
				<option value="">[Cualquiera]</option>
				<smn_documento_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_documento_id_rows>
			</select> 
			<input id="smn_documento_id_name" name="smn_documento_id_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_services}</td>
		<td>
			<select name="smn_servicio_rf" id="smn_servicio_rf" onchange="chgCombo(smn_servicio_rf.options[smn_servicio_rf.selectedIndex].text,'smn_servicio_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_servicio_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_servicio_rf_rows>
			</select> 
			<input id="smn_servicio_rf_name" name="smn_servicio_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_item}</td>
		<td>
			<select name="smn_item_rf" id="smn_item_rf" onchange="chgCombo(smn_item_rf.options[smn_item_rf.selectedIndex].text,'smn_item_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_item_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_item_rf_rows>
			</select> 
			<input id="smn_item_rf_name" name="smn_item_rf_name" type="hidden">
		</td>
	</tr>
		<tr>
			<td>${lbl:b_fecha}</td>
			<td>
				<input id="plv_fecha" name="plv_fecha" type="text" class="date" maxlength="10" >
				<img src="${def:context}/images/dropdown.png" title="Desplegar calendario" onclick="calendarOpen('plv_fecha');">
				<input type="button" name="Calcular" value="Calcular">
			</td>
		</tr>
		<tr style="display: none">
			<td>${lbl:b_semestre}</td>
			<td>
				<input id="plv_semestre_rf" name="plv_semestre_rf" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr style="display: none">
			<td>${lbl:b_trimestre}</td>
			<td>
				<input id="plv_trimestre_rf" name="plv_trimestre_rf" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr style="display: none">
			<td>${lbl:b_mes}</td>
			<td>
				<input id="plv_mes_rf" name="plv_mes_rf" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr style="display: none">
			<td>${lbl:b_semana}</td>
			<td>
				<input id="plv_semana_rf" name="plv_semana_rf" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_quantity}*</td>
			<td>
				<input id="plv_cantidad_rf" name="plv_cantidad_rf" type="text" maxlength="10" class="numeric">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_price}*</td>
			<td>
				<input id="plv_precio_rf" name="plv_precio_rf" type="text" maxlength="10" class="numeric" onchange="calcularmonto();">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_amount}*</td>
			<td>
				<input id="plv_monto_rf" name="plv_monto_rf" type="text" maxlength="10" class="numeric">
			</td>
		</tr>	
		<tr>
			<td>${lbl:b_coins}</td>
			<td>
				<select name="smn_moneda_rf" id="smn_moneda_rf" onchange="chgCombo30(smn_moneda_rf.options[smn_moneda_rf.selectedIndex].text,'smn_moneda_rf_name');cambiar();">
					<option value="">[Cualquiera]</option>
					<smn_moneda_rf_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_moneda_rf_rows>
				</select> 
				<input id="smn_moneda_rf_name" name="smn_moneda_rf_name" type="hidden">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_exchange_rate}</td>
			<td>
				<select name="smn_tasa_rf" id="smn_tasa_rf" onchange="chgCombo(smn_tasa_rf.options[smn_tasa_rf.selectedIndex].text,'smn_tasa_rf_name');seteartasa(smn_tasa_rf.options[smn_tasa_rf.selectedIndex].text,'smn_tasa_rf_name');">
					<option value="">[Cualquiera]</option>
					<smn_tasa_rf_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_tasa_rf_rows>
				</select> 
				<input id="smn_tasa_rf_name" name="smn_tasa_rf_name" type="hidden">
			</td>
		</tr>
		<tr id="precio_ma" style="display: none">
			<td>${lbl:b_price_ma}</td>
			<td>
				<input id="plv_precio_ma_rf" name="plv_precio_ma_rf" type="text" maxlength="10" class="numeric" onchange="calcular_pago();">
			</td>
		</tr>
		<tr id="monto_ma" style="display: none">
			<td>${lbl:b_amount_ma}</td>
			<td>
				<input id="plv_monto_ma_rf" name="plv_monto_ma_rf" type="text" maxlength="10" class="numeric">
			</td>
		</tr>


	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input id="limpiar" type="button" value="${lbl:b_clean_button}" onclick="addNew()" class="button">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">
<input type="hidden" name="divisa" id="divisa">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();

		document.getElementById('smn_sucursal_rf').disabled = true;
		document.getElementById('smn_area_servicio_rf').disabled = true;
		document.getElementById('smn_unidad_servicio_rf').disabled = true;

		if (id!="")
			edit(id);
	} 
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=false;
		clearForm("form1");
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		if (document.form1.id.value=="")
			return insert();
		else
			return update();
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id, 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}


//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
		function setSelectedIndex(code, combo, description) 
		{
			//alert(code, combo, descripcion);
			//alert('text = ' + combo.options[i].text + ' value = ' + combo.options[i].value)
		    for (var i = 0; i < combo.options.length; i++) 
		    {
				var valueText = code;
				if (description != null)
				{
					valueText = valueText + ' - ' + description;
				}
	    	    if (combo.options[i].text == valueText) 
				{
	        	//alert('text = ' + combo.options[i].text + ' value = ' + combo.options[i].value)
	        	combo.options[i].selected = true;
				return;
	        	}
	    	}  
		}
		
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndexValue(value, combo) {

		console.log("valor " + value);
				for (var i = 0; i < combo.options.length; i++) 
				{					
					if (combo.options[i].value == value) 
					{
						combo.options[i].selected = true;
						return;
					}
				} 
			}
	
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}
	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	

	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add value text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		
		//alert("Text: "+valueText+" - bdID: "+bdID);
		
		combo.text  = valueText;
		combo.value = bdID;
		
		//enable linked fields
		if (linked)
		{
			
			// if (field == 'smn_entidades_rf')
			// {
			// 	document.form1.smn_entidades_rf.disabled = false;
			// }
			// if (field == 'smn_sucursales_rf')
			// {
			// 	document.form1.smn_sucursales_rf.disabled = false;
			// }
			// if (field == 'smn_clase_auxiliar_rf')
			// {
			// 	document.form1.smn_clase_auxiliar_rf.disabled = false;
			// }
			// if (field == 'smn_auxiliar_rf')
			// {
			// 	document.form1.smn_auxiliar_rf.disabled = false;
			// }
			// if (field == 'smn_clase_ord_rf')
			// {
			// 	document.form1.smn_clase_ord_rf.disabled = false;
			// }
			// if (field == 'smn_auxiliar_ord_rf')
			// {
			// 	document.form1.smn_auxiliar_ord_rf.disabled = false;
			// }
			// if (field == 'smn_auxiliar_unidades_negocios_rf')
			// {
			// 	document.form1.smn_auxiliar_unidades_negocios_rf.disabled = false;
			// }
			// if (field == 'smn_auxiliar_sucursales_rf')
			// {
			// 	document.form1.smn_auxiliar_sucursales_rf.disabled = false;
			// }
			// if (field == 'smn_auxiliar_areas_servicios_rf')
			// {
			// 	document.form1.smn_auxiliar_areas_servicios_rf.disabled = false;
			// }
			// if (field == 'smn_auxiliar_unidades_servicios_rf')
			// {
			// 	document.form1.smn_auxiliar_unidades_servicios_rf.disabled = false;
			// }

		}
	}

	var geo_id1 = null;
	function chgCombo3(text,id)
	{		
		document.form1.smn_sucursal_rf.disabled=false;
		document.form1.smn_area_servicio_rf.disabled=false;
		
		var combo = document.getElementById('smn_entidades_rf');
		var valueCombo = getIDSelectedIndex(combo);
		geo_id1 = valueCombo.split("-").pop().trim();
		
		if (id!=null && id!="") 
		{
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getsucursal?id=" + geo_id1, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_sucursal_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
	}


	var geo_id2 = null;
	function chgCombo12(text,id)
	{		
		document.form1.smn_area_servicio_rf.disabled=false;
		
		var combo = document.getElementById('smn_entidades_rf');
		var valueCombo = getIDSelectedIndex(combo);
		geo_id2 = valueCombo.split("-").pop().trim();
		
		//findLocation(geo_id0, '');
		
		if (id!=null && id!="") 
		{
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getareaservicio?id=" + geo_id2, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_area_servicio_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}	
	}

	var geo_id3 = null;
	function chgCombo13(text,id)
	{		
		document.form1.smn_unidad_servicio_rf.disabled=false;
		
		var combo = document.getElementById('smn_entidades_rf');
		var valueCombo = getIDSelectedIndex(combo);
		geo_id2 = valueCombo.split("-").pop().trim();
		
		//findLocation(geo_id0, '');
		
		if (id!=null && id!="") 
		{
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getunidadservicio?id=" + geo_id2, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_unidad_servicio_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
	}

	function calcularmonto() {
		var cant = document.getElementById('plv_cantidad_rf').value;
		var pre = document.getElementById('plv_precio_rf').value;
		var tot = 0;

		tot = cant * pre;

		document.getElementById('plv_monto_rf').value = tot;
		document.form1.plv_monto_rf.disabled=true;
	}

	function calcularmontoma() {
		var cant = document.getElementById('plv_cantidad_rf').value;
		var prema = document.getElementById('plv_precio_ma').value;
		var tot = 0;

		tot = cant * prema;

		document.getElementById('plv_monto_ma').value = tot;
		document.form1.plv_monto_ma.disabled=true;
	}

	function cambiar() {
		var mon = document.getElementById('smn_moneda_rf').value;

		if (mon != 360) {
			document.getElementById('precio_ma').style.display = '';
			document.getElementById('monto_ma').style.display = '';
		}else{
			document.getElementById('precio_ma').style.display = 'none';
			document.getElementById('monto_ma').style.display = 'none';
		}
	}


	//Este codigo fue creado por SIMONE y ajustado en este crud por Kelvin Marcano
	var geo_idt = null;
	function chgCombo30(text,id)
	{				
		document.form1.smn_tasa_rf.disabled=false;
		var combo = document.form1.smn_moneda_rf;
		var valueCombo = getIDSelectedIndex(combo);
		//geo_idt = valueCombo.split("-").pop().trim();
		//alert(valueCombo);
		if (id!=null && id!="") 
		{	
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/gettasa?id=" + valueCombo, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_tasa_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null); 				
		}
	}

	function seteartasa(text, id) {

			//Este codigo fue creado por SIMONE y ajustado en este crud por Kelvin Marcano

		//document.form1.smn_tasa_rf.disabled=false;
		var combo = document.getElementById('smn_tasa_rf');
		var valueCombo = getIDSelectedIndex(combo);
		//geo_idt = valueCombo.split("-").pop().trim();
		//alert(valueCombo);
		if (id!=null && id!="") 
		{	
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/gettasa_value?id=" + valueCombo, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null); 				
		}
	}

	function calcular_pago() {
		var divid = document.getElementById('divisa').value;
		var monto_dolar = document.getElementById('plv_precio_ma_rf').value;
		//var total = 0;
		//var total2 = 0;
		total = monto_dolar * divid;

		//alert(total);
		document.getElementById('plv_monto_ma_rf').value = total; 
		document.getElementById('plv_monto_ma_rf').disabled=true;

		

		//  var mp = document.getElementById('plv_precio_rf').value;
		//  var mpp = document.getElementById('plv_monto_rf').value ;

		// // //alert(mp);
		// // //	alert(mpp);
		//  total2 =  mpp - mp;
		// // alert(total2);

		//  document.getElementById('plv_monto_ma_rf').value= total2.toFixed(2);

		//var m1 = document.getElementById('ppv_monto_pagar_ml').value;
		//var m2 = document.getElementById('ppv_monto_pago_ml').value;
		//total3 = m1 -  m2;

		//document.getElementById('ppv_monto_devuelto_ml').value= total3.toFixed(2);

	}


	 function trimestral(){
	 	var fec = document.getElementById('plv_fecha').value;
		
		//alert(fec);
	 	var mes = new Date(fec);
	 	var newdate = mes.split("-").reverse().join("-");
	 	var mess = formatDate(newdate);
	 	alert(mess);
            // var parts = datetime.match(/(\d+)/g);
            // var month = parts[1]; console.log('El valor del mes es: '+month);
            // var trimestre = Math.floor((month-1)/3)+1;

            // document.getElementById('plv_trimestre_rf').value = trimestre
            // return trimestre;
     }

     function formatDate(date) {
		   	 var d = new Date(date),
		     	day = '' + d.getDate(),
		        month = '' + (d.getMonth() + 1),
		        year = d.getFullYear();

		    if (month.length < 2) 
		        month = '0' + month;
		    if (day.length < 2) 
		        day = '0' + day;

		    return [year, month, day].join('-');
		}


	
</script>	
</body>
</html>
