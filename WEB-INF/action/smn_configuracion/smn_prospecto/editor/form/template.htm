<!doctype html>
<html>

<head>

		<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
		<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script">
	</script>

</head>

<body>

<!--banner-->
<div class="bannerDialog" id="encabezado_tabla">
	${lbl:b_leaflet}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
		<tr>
			<td>${lbl:b_code}*</td>
			<td>
				<input id="pro_codigo" name="pro_codigo" type="text" maxlength="18" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_description}*</td>
			<td>
				<input id="pro_descripcion" name="pro_descripcion" type="text" maxlength="100" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_email}*</td>
			<td>
				<input id="pro_email" name="pro_email" type="text" maxlength="100"  placeholder='${lbl:b_email_format}' >

			</td>
		</tr>
		<tr>
			<td>${lbl:b_mobile}*</td>
			<td>
				<input id="pro_movil" name="pro_movil" type="text" maxlength="100" placeholder='${lbl:b_format_phone_mobile}'>
			</td>
		</tr>
		<tr>
			<td>${lbl:b_fije}*</td>
			<td>
				<input id="pro_fijo" name="pro_fijo" type="text" maxlength="100" placeholder='${lbl:b_format_phone_local}'>
			</td>
		</tr>
		<tr>
			<td>${lbl:b_referid}*</td>
			<td>
				<input id="pro_referido" name="pro_referido" type="text" maxlength="100" >
			</td>
		</tr>
		<tr style="display: none">
			<td>${lbl:b_status}*</td>
			<td>
				<select name="pro_estatus" id="pro_estatus">
				<option value="AC">${lbl:b_active}</option>
				<option value="IN">${lbl:b_inactive}</option>

				</select> 
			</td>
		</tr>
		<tr style="display: none">
			<td>${lbl:b_vigency}*</td>
			<td>
				<input id="pro_vigencia" name="pro_vigencia" type="text" class="date" maxlength="10">
				<img src="${def:context}/images/dropdown.png" title="Desplegar calendario" onclick="calendarOpen('pro_vigencia')">
			</td>
		</tr>
	<tr>
		<td>${lbl:b_address}</td>
		<td>
			<select name="smn_direccion_rf" id="smn_direccion_rf" onchange="chgCombo(smn_direccion_rf.options[smn_direccion_rf.selectedIndex].text,'smn_direccion_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_direccion_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_direccion_rf_rows>
			</select> 
			<input id="smn_direccion_rf_name" name="smn_direccion_rf_name" type="hidden">
		</td>
			<!-- Incorporado manualmente para mostrar icono de inclusion de elementos al combo -->
		<td>
			<img src="${def:context}/images/list-add2.png" align="left" class="button" onclick="direccion()" title="${lbl:b_address}" >
		</td>
		<td>
			&nbsp;&nbsp;
		</td>
	</tr>

	<tr>
		<td>${lbl:b_contact_type}</td>
		<td>
			<select name="smn_tipo_contactos_rf" id="smn_tipo_contactos_rf" onchange="chgCombo(smn_tipo_contactos_rf.options[smn_tipo_contactos_rf.selectedIndex].text,'smn_tipo_contactos_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_tipo_contactos_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_tipo_contactos_rf_rows>
			</select> 
			<input id="smn_tipo_contactos_rf_name" name="smn_tipo_contactos_rf_name" type="hidden">
		</td>
	</tr>

	<tr>
			<td>${lbl:b_description_contact}*</td>
			<td>
				<input id="pro_descripcion_contacto" name="pro_descripcion_contacto" type="text" maxlength="100" >
			</td>
		</tr>

	<tr>
		<td>
			<input id="id2" name="id2" type="hidden">
		</td>
		</tr>


	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input id="limpiar" type="button" value="${lbl:b_clean_button}" onclick="addNew()" class="button">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();

		//Set automatic correlative number
		document.form1.pro_codigo.disabled = true;
		document.form1.pro_codigo.value = '${fld:correlative}';

		if (id!="")
			edit(id);
	} 
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=false;
		clearForm("form1");
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert?reference=${fld:reference}", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		var result;
		if (document.form1.id.value=="")
			result = insert();
		else
			result = update();
				
		setTimeout(function(){
					if ('${fld:reference}' == 'true')
					{
						//alert('${fld:reference} - ${fld:source}')			
						var cod = document.getElementById("id2").value;
						var cod2 = document.form1.pro_codigo.value;	
						var nom2 = document.form1.pro_descripcion.value;	
						nom = cod2 +'-'+ nom2;
						//alert('Codigo: '+cod+' - Nombre: '+nom)
						if ('${fld:source}' == 'prospecto')
						{
							//alert('Nuevo valor insertado para Prospecto')
							parent.setValueComboBox(cod,
													nom,
													'smn_prospecto_id',
													false);
						}
					}
			 },1000);	
		
		return result;
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id , 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}

	function direccion() {
		var uri = "/smn_base/action/smn_configuracion/smn_ubicacion_geografica/smn_direccion/editor/form?reference=true&source=direccion";	
			openDialog("editor3", uri, 875, 600);
	}



	var bdID;
	function setID(id)
	{
		bdID = id;
	}

			//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description, field) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
        //combo.options[combo.options.length] = new Option(valueText);
		var option = document.createElement("option");
		option.text = valueText; 
		option.value = bdID;

		if (field == 'smn_direccion_rf')
		{
			alert('AÃ±adiendo a direccion en prospectos')
			document.form1.smn_direccion_rf.add(option, combo.options.length);
		}
		
	}

	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	   insertComboBox(code, combo, description, field);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText) 
	        {
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}
	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	

		//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add valur text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		//var combo = document.getElementById(field+'_name');

		//combo.text=valueText;
		//combo.value=bdID;
		
		setSelectedIndex(bdID, combo, valueText); 
	}
	
</script>	
</body>
</html>
